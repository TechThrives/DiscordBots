const { EmbedBuilder, AttachmentBuilder } = require("discord.js");
const emojis = require("../emojis.js");
const config = require("../config.js");
const path = require("path");
const ai = require("./aiHelper.js");

// Helper function to handle both message and interaction responses
async function sendResponse(target, content) {
  if (target.reply && target.editReply) {
    // This is an interaction
    if (target.deferred || target.replied) {
      return await target.editReply(content);
    } else {
      return await target.reply(content);
    }
  } else {
    // This is a channel
    return await target.send(content);
  }
}

module.exports = {
  send: async function (target, content) {
    const chunks = ai.chunkMessage(content);
    for (const chunk of chunks) {
      await sendResponse(target, chunk);
    }
  },

  image: async function (target, imagePath, prompt) {
    const attachment = new AttachmentBuilder(imagePath);

    const embed = new EmbedBuilder()
      .setColor(config.embedColor)
      .setTitle("Image Generated")
      .setDescription(`**Prompt:** ${prompt}`)
      .setImage(`attachment://${path.basename(imagePath)}`)
      .setFooter({ text: "Generated by AstrisAI" });

    return await sendResponse(target, { embeds: [embed], files: [attachment] });
  },

  help: async function (target, commands) {
    const embed = new EmbedBuilder()
      .setColor(config.embedColor)
      .setTitle(`${emojis.info} Available Commands`)
      .setDescription(commands.map((cmd) => `${emojis.ai} \`/${cmd.name}\` - ${cmd.description}`).join("\n"))
      .setFooter({ text: "Use / prefix to use commands" });

    return await sendResponse(target, { embeds: [embed] });
  },
};
